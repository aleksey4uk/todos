{"version":3,"sources":["reducer/index.js","store.js","services/swapi-service.js","components/add-panel/add-panel.js","components/add-panel/index.js","components/list-item/index.js","components/list-item/list-item.js","components/list/list.js","components/list/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["initianalState","data","value","editValue","reducer","state","action","type","payload","loading","idx","findIndex","item","id","slice","classes","find","name","idxvalues","idxCheck","newelem","checked","target","store","createStore","SwapiService","apiBase","process","getData","a","axios","get","res","deleteItem","delete","checkedItem","patch","editItem","addItem","post","swapiService","AddPanel","props","onChanges","onSubmits","className","noValidate","autoComplete","onSubmit","e","TextField","fullWidth","label","variant","size","onChange","event","preventDefault","Button","color","defaultProps","connect","dispatch","length","result","then","ListItems","onEdit","onDelete","onChecked","onEditStart","editComplete","classes2","ListItem","Checkbox","inputProps","onClick","placeholder","ListItemText","primary","IconButton","aria-label","Lists","this","load","complete","List","map","key","Component","chek","App","Card","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97b33b5b.chunk.js","sourcesContent":["const initianalState = {\n  data: [],\n  value: '',\n  editValue: {\n    value: '',\n  },\n};\n\nconst reducer = (state = initianalState, action) => {\n  switch (action.type) {\n    case 'LOAD':\n      return {\n        ...state,\n        data: action.payload,\n        loading: true,\n      };\n\n    case 'COMPLETE':\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case 'DELETE': {\n      const idx = state.data.findIndex((item) => item.id === action.payload);\n      return {\n        ...state,\n        data: [\n          ...state.data.slice(0, idx),\n          ...state.data.slice(idx + 1),\n        ],\n      };\n    }\n\n    case 'EDIT': {\n      const { value } = action.payload;\n      return {\n        ...state,\n        editValue: {\n          value,\n          id: action.payload.id,\n          classes: 'on',\n        },\n      };\n    }\n\n    case 'EDIT-START':\n      return {\n        ...state,\n        editValue: {\n          value: state.data.find((item) => item.id === action.payload).name,\n          id: action.payload,\n          classes: 'on',\n        },\n      };\n\n    case 'EDIT-COMPLETE': {\n      const idxvalues = state.data.findIndex((item) => item.id === state.editValue.id);\n      return {\n        ...state,\n        data: [\n          ...state.data.slice(0, idxvalues),\n          action.payload,\n          ...state.data.slice(idxvalues + 1),\n        ],\n        editValue: {\n          ...state.editValue,\n          classes: 'off',\n        },\n      };\n    }\n\n    case 'CHECKED': {\n      const idxCheck = state.data.findIndex((item) => item.id === action.payload);\n      const newelem = {\n        ...state.data[idxCheck],\n        checked: !state.data[idxCheck].checked,\n      };\n      return {\n        ...state,\n        data: [\n          ...state.data.slice(0, idxCheck),\n          newelem,\n          ...state.data.slice(idxCheck + 1),\n        ],\n      };\n    }\n\n    case 'ADD-VALUE':\n      return {\n        ...state,\n        value: action.payload.target.value,\n      };\n\n    case 'COMPLETE-VALUE':\n      return {\n        ...state,\n        data: [\n          ...state.data,\n          action.payload,\n        ],\n        value: '',\n      };\n\n    default: return state;\n  }\n};\n\nexport default reducer;\n","import { createStore } from 'redux';\nimport reducer from './reducer';\n\nconst store = createStore(reducer);\nexport default store;\n","import axios from 'axios';\n\nexport default class SwapiService {\n  apiBase = process.env.REACT_APP_URL;\n\n  getData = async () => {\n    const res = await axios.get(this.apiBase);\n    return res.data;\n  }\n\n  deleteItem = async (id) => {\n    const res = await axios.delete(`${this.apiBase}${id}`);\n    return res.data;\n  }\n\n  checkedItem = async (id, checked) => {\n    const res = await axios.patch(`${this.apiBase}${id}`, { checked });\n    return res.data;\n  }\n\n  editItem = async (id, name) => {\n    const res = await axios.patch(`${this.apiBase}${id}`, { name });\n    return res.data;\n  }\n\n  addItem = async (payload) => axios.post(this.apiBase, payload)\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport './add-panel.css';\nimport SwapiService from '../../services/swapi-service';\n\nconst swapiService = new SwapiService();\n\nconst AddPanel = (props) => {\n  const {\n    value, onChanges, onSubmits, data,\n  } = props;\n\n  return (\n    <div className=\"add-panel\">\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e) => onSubmits(e, value, data)}\n      >\n        <TextField\n          className=\"add-panel-inputs\"\n          fullWidth\n          label=\"Task\"\n          id=\"outlined-size-small\"\n          variant=\"outlined\"\n          size=\"small\"\n          onChange={(event) => {\n            event.preventDefault();\n            onChanges(event);\n          }}\n          value={value}\n        />\n        <Button\n          type=\"submit\"\n          onSubmit={(e) => onSubmits(e, value)}\n          variant=\"outlined\"\n          size=\"small\"\n          color=\"primary\"\n          className=\"add-panel-button\"\n        >\n          ADD\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nAddPanel.defaultProps = {\n  value: '',\n  data: [],\n  onChanges: () => {},\n  onSubmits: () => {},\n};\n\nAddPanel.propTypes = {\n  value: PropTypes.string,\n  onChanges: PropTypes.func,\n  onSubmits: PropTypes.func,\n  data: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => ({\n  ...state,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChanges: (payload) => dispatch({ type: 'ADD-VALUE', payload }),\n  onSubmits: (e, value) => {\n    e.preventDefault();\n    if (value.length <= 0) return;\n    const result = { name: value, checked: false };\n    swapiService\n      .addItem(result)\n      .then((res) => {\n        const payload = res.data;\n        dispatch({ type: 'COMPLETE-VALUE', payload });\n      });\n  },\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPanel);\n","import AddPanel from './add-panel';\n\nexport default AddPanel;\n","import ListItems from './list-item';\n\nexport default ListItems;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport './list-item.css';\n\nconst ListItems = ({\n  id, name, onEdit, onDelete, onChecked, checked, editValue = false, onEditStart, editComplete,\n}) => {\n  let classes = 'list-item-text ';\n  let classes2 = 'list-item-texts ';\n  if (editValue) {\n    if (editValue.id === id) {\n      classes += 'on';\n      classes2 += 'off';\n    }\n  }\n  if (editValue.classes === 'off') {\n    classes = 'list-item-text ';\n    classes2 = 'list-item-texts ';\n  }\n  return (\n    <ListItem className=\"list-items\">\n      <Checkbox\n        checked={checked}\n        color=\"primary\"\n        inputProps={{ 'aria-label': 'secondary checkbox' }}\n        onClick={() => onChecked(id, checked)}\n      />\n      <form onSubmit={(event) => editComplete(event, id, editValue.value)}>\n        <TextField\n          id={`${id}`}\n          autoComplete=\"off\"\n          className={classes}\n          onChange={(event) => { event.preventDefault(); onEdit(event, id); }}\n          placeholder={name}\n          value={editValue.value}\n        />\n        <ListItemText\n          className={classes2}\n          id={id}\n          primary={name}\n          onClick={() => { onEditStart(id); }}\n        />\n      </form>\n      <IconButton aria-label=\"delete\" onClick={() => onDelete(id)}>\n        <DeleteIcon />\n      </IconButton>\n    </ListItem>\n  );\n};\n\nListItems.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onChecked: PropTypes.func.isRequired,\n  checked: PropTypes.bool.isRequired,\n  editValue: PropTypes.shape({}).isRequired,\n  onEditStart: PropTypes.func.isRequired,\n  editComplete: PropTypes.func.isRequired,\n};\n\nexport default ListItems;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItems from '../list-item';\nimport SwapiService from '../../services/swapi-service';\n\nconst swapiService = new SwapiService();\n\nclass Lists extends Component {\n  componentDidMount() {\n    const { load, complete } = this.props;\n    swapiService\n      .getData()\n      .then(load)\n      .then(complete);\n  }\n\n  render() {\n    const { data } = this.props;\n    if (data.length <= 0) return <h3>Загрузка...</h3>;\n    return (\n      <>\n        <List>\n          {\n            data.map((item) => {\n              const {\n                editValue, onEdit, onEditStart, onDelete, onChecked, editComplete,\n              } = this.props;\n              return (\n                <ListItems\n                  checked={item.checked}\n                  id={item.id}\n                  name={item.name}\n                  editValue={editValue}\n                  key={item.id}\n                  onEdit={onEdit}\n                  onEditStart={onEditStart}\n                  onDelete={onDelete}\n                  onChecked={onChecked}\n                  editComplete={editComplete}\n                />\n              );\n            })\n          }\n        </List>\n      </>\n    );\n  }\n}\n\nLists.propTypes = {\n  onEdit: PropTypes.func.isRequired,\n  onEditStart: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onChecked: PropTypes.func.isRequired,\n  editComplete: PropTypes.func.isRequired,\n  load: PropTypes.func.isRequired,\n  complete: PropTypes.func.isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  editValue: PropTypes.shape({}).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  load: (payload) => dispatch({ type: 'LOAD', payload }),\n  complete: () => dispatch({ type: 'COMPLETE' }),\n  onDelete: (payload) => {\n    swapiService\n      .deleteItem(payload)\n      .then(() => dispatch({ type: 'DELETE', payload }));\n  },\n  onChecked: (payload, checked) => {\n    const chek = !checked;\n    swapiService\n      .checkedItem(payload, chek)\n      .then(() => dispatch({ type: 'CHECKED', payload }));\n  },\n  onEdit: (e, id) => {\n    const payload = {\n      value: e.target.value,\n      id,\n    };\n    dispatch({ type: 'EDIT', payload });\n  },\n  onEditStart: (payload) => dispatch({ type: 'EDIT-START', payload }),\n  editComplete: (event, id, value) => {\n    event.preventDefault();\n    swapiService\n      .editItem(id, value)\n      .then((payload) => dispatch({ type: 'EDIT-COMPLETE', payload }));\n  },\n});\n\nconst mapStateToProps = (state) => ({\n  ...state,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Lists);\n","import Lists from './list';\n\nexport default Lists;\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport AddPanel from '../add-panel';\nimport Lists from '../list';\nimport './app.css';\n\nconst App = () => (\n  <div className=\"app\">\n    <Card className=\"card\">\n      <AddPanel />\n      <Lists />\n    </Card>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './components/app';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}